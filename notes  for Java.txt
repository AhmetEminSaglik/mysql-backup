
----------------------	 JLAYERED PANELDE  KATMANLARIN KARIÞMAMASI ÝÇÝN  NEW INTEGER KULLANIYORUZ  ----------------------	 


 this.setBackground(new Color(255, 234, 167));
         this.add(getLblImage(), new Integer(0));
        this.add(getLblusername(), new Integer(1));
        this.add(getLblPass(), new Integer(1));
        this.add(getTxtusername(), new Integer(1));
        this.add(getjPass(), new Integer(1));
        this.add(getSignIn(), new Integer(1));
       







	
------------------ IMAGE  EKLEME VE BOYUTUNU AYARLAMA ------------------
 public JLabel getLblImage() {
        if (lblImage == null) {
            lblImage = new JLabel();
            lblImage.setBounds(35, 20, getJf().getWidth() - 70, getJf().getHeight() - 70);
            ImageIcon imageIconKtu = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ktuLogo.png")));
            Image imageKtu = imageIconKtu.getImage();
            Image imageKtu2 = imageKtu.getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon i = new ImageIcon(imageKtu2);
            lblImage.setIcon(i);

        }

        return lblImage;
    }

btn.setBorder(BorderFactory.createLineBorder(Color.GRAY, 4));

System.out.println(au.getTxtOldPassword().getText().trim().length()); // þifredeki boþluklarý silerek sayar (sað ve soldaki boþluklarý)
System.out.println(au.getTxtNewPassword1().getPassword().length == 0); // þifre uzunluðulunu buna bakarak belirleyebilirim
            

///////////////////////////////////////////////////////////////////////////
   AudioInputStream stream = AudioSystem.getAudioInputStream(new File("src/Gui/baslangic_muzigi.wav"));
            clip = AudioSystem.getClip();
            clip.open(stream);
            clip.start();
            clip.loop(Clip.LOOP_CONTINUOUSLY);
--------
if (getBeg().clip.isRunning()) {
     getBeg().clip.stop();
				}
///////////////////////////////////////////////////////////////////////////

 if (e.getSource() == getBeg().getCikis()) {
                int cevap = JOptionPane.showConfirmDialog(null, "Çýkmak istediðinize emin misiniz ?", "Çýkýþ Sayfasi", 2);
                if (cevap == 0) {
                    System.exit(0);
                }

                // 0=yes, 1=no, 2=cancel
            }
///////////////////////////////////////////////////////////////////////////
int cevap = JOptionPane.showConfirmDialog(null, "Oyunuz kaydedilmeyecektir çýkmak istediðinize emin misiniz ? ", " UYARI ", 0, 2);
///////////////////////////////////////////////////////////////////////////
     jf_oyun_kurallari.setUndecorated(true); -->  yukardan kapatma küçültmeyi kaldýrýr
///////////////////////////////////////////////////////////////////////////
  jf_oe.setEnabled(false); --> Pencereyi kaydýrmayý engeller 
///////////////////////////////////////////////////////////////////////////
jf_ayarlar.setUndecorated(true); //   olduðu yerde --> jf_ayarlar.setVisible(true); bu olmamasý gerekiyor
///////////////////////////////////////////////////////////////////////////
eðer butonlar mouse üzerine gelince görünüyorsa ve panel&layeredpane setlayout(null) ise
arka plan rengini deðiþtir
///////////////////////////////////////////////////////////////////////////

StudentNo_txt.getDocument().addDocumentListener(action); 
StudentNo_txt.getDocument().putProperty("StudentNo_BookId_txt", 1); // first one is key , the other one is value
Yukarýdaki ikisi  ile jtext fielde yazý yazdýðýmýzda direk algýlamasýný saðlar

Yanlýz action için þunlarý da eklememiz gerekir: 
public class Actions_MainGui implementsDocumentListener {}

 
    @Override
    public void insertUpdate(DocumentEvent e) {

        // e.getDocument().getProperty ("HERE",value) --> HERE must be same I dont know why  but we differenciate witdh value
        if (e.getDocument().getProperty("StudentNo_BookId_txt").equals(1)) {// first for student no

            System.out.println("----Alinan kelime :" + getMg().getStudentNo_txt().getText());
        }

        if (e.getDocument().getProperty("StudentNo_BookId_txt").equals(2)) { // second for bookId
            System.out.println("silindikten sonra :" + getMg().getBookId_txt().getText());
        }

        //    System.out.println("getMg().getStudentNo_txt() : " + getMg().getStudentNo_txt().getDocument());
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        if (e.getDocument().getProperty("StudentNo_BookId_txt").equals(1)) { // second for bookId
            System.out.println("----Alinan kelime :" + getMg().getStudentNo_txt().getText());
        }
        if (e.getDocument().getProperty("StudentNo_BookId_txt").equals(2)) { // second for bookId
            System.out.println("silindikten sonra :" + getMg().getBookId_txt().getText());
        }
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        System.out.println("changedUpdate");
    }

StudentNo_txt.addActionListener(action);
///////////////////////////////////////////////////////////////////////////

txt.setBorder(BorderFactory.createLineBorder(Color.yellow,0);
txt.setBorder(BorderFactory.createCompoundBorder(txt.getBorder(),BorderFactory.createEmptyBorder(5,5,5,5)); -->(Yukardan,sol,aþaðý,saðdan)

///////////////////////////////////////////////////////////////////////////
 setBackground( new Color(107, 106, 104) ); --> RGB
///////////////////////////////////////////////////////////////////////////
https://flatuicolors.com/
güzelbir kýrmýzý --> (231,76,60)
gri--> (52,73,94) --> asfalt girisi
///////////////////////////////////////////////////////////////////////////
1-) YONTEM : Jpasword için --> String.valueOf(jpassword.getPassword); --> (gizli)
2-) YONTEM : password.charAt(i) == JPASSWORD.getPassword()[i]; 

///////////////////////////////////////////////////////////////////////////
jpaneli extends edince kaybedemiyoruz (en azýndan ben yapamadým)
jframe jpaneli ekleyince onu setvisible'ný kapatýp baþka jp açabiliyoruz

///////////////////////////////////////////////////////////////////////////
public void animationCreatorCaption() {
        Thread t1 = new Thread() {  //--> thread oluþturma temelde :   	 Thread t1 = new Thread(){ public void run() {} }; t1.start
            public void run() {
                int index = -250;
                try {
                    while (true) {
                        for (int i = 885; i > index; i--) {
                            Thread.sleep(10 );
                            mg.getCreatorCaption().setLocation(i, 500);

                        }
                        /*for (int i = index; i < 600; i++) {
                            Thread.sleep(2);
                            mg.getCreatorCaption().setLocation(i, 600);
                        }*/
                    }
                } catch (Exception e) {
                    System.out.println(" hata kodu : " + e);
                }
            }
        };
        t1.start();

    }
///////////////////////////////////////////////////////////////////////////
TAB MENU OLUÞTURMA

if (jtp == null) {
            jtp = new JTabbedPane();
            jtp.setBounds(270, 180, 800, 500);
            Icon iconProfile = new ImageIcon("src/Images/profile24px.png");
            jtp.addTab("PROFIL", iconProfile, getjProfil(), "Profil Menüsü Ýþlemleri"); //-->  
            Icon iconMail = new ImageIcon("src/Images/email24px.png");
            jtp.addTab("MAIL", iconMail, getJMail(), "Mail Menüsü iþlemleri");
            Icon iconMeeting = new ImageIcon("src/Images/meeting24px.png");
            jtp.addTab("GELEN KUTUSU", iconMeeting, getJMessageBox(), "Gelen Kutusu Menüsü Ýþlemleri");
            jtp.setFont(new Font("verdana", Font.BOLD, 24));
            jtp.setBorder(BorderFactory.createLineBorder(Color.yellow, 0));
            jtp.setForeground(new Color(0, 165, 245));

        }
///////////////////////////////////////////////////////////////////////////
 if (sp == null) {//--> JScrolPane sp; 'den geliyor 
            sp = new JScrollPane(getTbl());
            sp.setBounds(LeftSpace, txtTopSpace + txtHeight * 2, 750, 350);
            sp.setHorizontalScrollBarPolicy(sp.HORIZONTAL_SCROLLBAR_ALWAYS);// yatay olarak her zaman 
            //sp.setVerticalScrollBarPolicy(sp.VERTICAL_SCROLLBAR_ALWAYS);

        }
///////////////////////////////////////////////////////////////////////////
    tbl.getColumnModel().getColumn(0).setPreferredWidth(100);	  // --> table colum width'ini ayarlar

	if (tbl == null) {
            tbl = new JTable(DataForTable, HeaderOfTable);
            tbl.setDefaultEditor(Object.class, null);
            tbl.setCursor(new Cursor(12));
            tbl.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
            // {"Öðrenci No", "Kitap Barko No", "Kitap Adý", "Kitabýn Alýndýðý Tarih", "Borç (TL)"};
            tbl.getColumnModel().getColumn(0).setPreferredWidth(100);
            tbl.getColumnModel().getColumn(1).setPreferredWidth(250);
            tbl.getColumnModel().getColumn(2).setPreferredWidth(450);
            tbl.getColumnModel().getColumn(3).setPreferredWidth(250);
            tbl.getColumnModel().getColumn(4).setPreferredWidth(200);
            tbl.setFont(lblFont);
        }
//////////////////////////////////////////////////////////////////////////////
DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
centerRenderer.setHorizontalAlignment(JLabel.CENTER);
tbl.getColumnModel().getColumn(0).setCellRenderer(centerRenderer); // istenilen sutunu ortalar
tbl.setDefaultRenderer(Object.class, centerRenderer);		   // tablodaki bütün satýrlarý ortalar

//////////////////////////////////////////////////////////////////////////////
    String SqlStudentdDeleteQuery = "DELETE FROM `student` WHERE No = " + sug.getTxtNewNo().getText();

--> DELETE ÝÞLEMÝNDE OLMAZ -->            //    stmt.executeQuery(SqlStudentdDeleteQuery);

--> PreparedStatement preparedStmt = conn.prepareStatement(SqlStudentdDeleteQuery); ---> JAVA DA MYSQL DELETE ÝÇÝN BU KULLANILIR

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      String dayQuery = "SELECT DATEDIFF ('" + BorrowedDate1 + "',NOW())";
                    rs = stmt.executeQuery(dayQuery);

                    Date d = new Date(System.currentTimeMillis());
                    //d = (date) (d - BorrowedDate1);
                    LocalDate borrowedDate = BorrowedDate1.toLocalDate();
                    LocalDate now = LocalDate.now();

                    Period diff = Period.between(borrowedDate, now);

 


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 Class.forName(JDBC_DRIVER);

            conn = DriverManager.getConnection(DB_URL, USER, PASS);

            stmt = conn.createStatement();

            String bookTotalNumberQuery = "SELECT COUNT(*) FROM book ";
            rs = stmt.executeQuery(bookTotalNumberQuery);
            if (rs.next()) {
                getMg().getTxtTotalBook().setText(Integer.toString(rs.getInt("COUNT(*)")));  //-->  sql de aradýðýmýz sayýyý böylece java ya gönderebiliriz

            }


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

   searchQuery = "SELECT * FROM student WHERE name LIKE '%" + rsg.getTxtName().getText().trim() + "%'";

  int studentNumberAccordingToQuery = 0;

            rs = stmt.executeQuery(searchQuery);								

            int counter = 0;

            while (rs.next()) {	   						//   istenen kritere göre toplam sayý bulunur

                rsg.DataOfTable[counter][0] = Integer.toString(counter + 1);	// jtable'ýn ilk dizine ([][],[])	 eklenir
                rsg.DataOfTable[counter][1] = rs.getString("No");
                rsg.DataOfTable[counter][2] = rs.getString("Name");
                rsg.DataOfTable[counter][3] = rs.getString("Surname");
                rsg.DataOfTable[counter][4] = rs.getString("Email");
                rsg.DataOfTable[counter][5] = rs.getString("Phone");

                counter++;
            }

            String ClearQuery = "SELECT * FROM student";
            rs = stmt.executeQuery(ClearQuery);
            int deleteRows = counter;
            while (rs.next() && deleteRows < rsg.DataOfTable.length) {
                rsg.DataOfTable[deleteRows][0] = null;		
                rsg.DataOfTable[deleteRows][1] = null;
                rsg.DataOfTable[deleteRows][2] = null;
                rsg.DataOfTable[deleteRows][3] = null;
                rsg.DataOfTable[deleteRows][4] = null;
                rsg.DataOfTable[deleteRows][5] = null;

                deleteRows++;
            }

            rsg.setSp(new JTable(rsg.DataOfTable, rsg.HeadersOfTable));
            rsg.getJp().add(rsg.getSp());



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 	
 if (Pattern.matches("^[a-zA-z0-9]+[@]{1}+[a-zA-z0-9]+[.]{1}[a-zA-z0-9]+S", sag.getTxtEmail().getText())) {
                       //Email geçerli
                    } else {
                        //Email geçersiz
                    }



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import java.util.Date;  // ekledikten sonra

    Date today = new Date(); 	 // kullanabiliriz
